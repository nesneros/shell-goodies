#! /bin/bash

echo '''
    h        Remove a trailing pathname component, leaving the head.
    r        Remove a trailing suffix of the form .xxx , leaving the basename.
    e        Remove all but the suffix.
    t        Remove all leading pathname components, leaving the tail.
    &        Repeat the previous substitution.
    g        Apply the change to the first occurrence of a match in each word, by prefixing the above (for example, g& ).
    p        Print the new command but do not execute it.
    q        Quote the substituted words, escaping further substitutions.
    x        Like q , but break into words at each blank.
    l        Convert the words to all lowercase.
    u        Convert the words to all uppercase.
    f        Repeats the immediately-following (without a colon) modifier until the resulting word does not change any more.
             This modifier and the following four only work with parameter and filename expansion.
    F:expr:  Like f , but repeats only n times if the expression expr evaluates to n. Any character can be used instead
             of the : , with the exception that if ( , [ , or { is used as the opening delimiter, the closing delimiter
             must be ) , ] , or } respectively.
    w        Makes the immediately-following modifier work on each word in the string.
    W:sep:   Like w , but words are considered to be the parts of the string that are separated by sep.
             Delimiters are handled as in F above.
    s/l/r[/] Substitute r for l.
             Unless preceded by a g , the substitution is done only for the first string that matches l.
'''
