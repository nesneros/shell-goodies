#! /usr/bin/env bash
set -e

secretDir="$GOODIES_SECRETS_DIR"

if [[ -z "$secretDir" ]]; then
    echo "env GOODIES_SECRETS_DIR is not defined"
    exit 1
fi
length=15

usage() {
    cat <<EOF
Manage secrets stored encrypted in files.

Usage: $(basename $0) [options] [args]
options:
  --get: Print a secret. Default if no options is given
  --delete: Delete a secret
  --create: Create a new secret. The value is randomly generated
  --store: Store a new secret. The value is read from stdin
EOF
    
}

cmd=get
needName=1
while [[ "$1" = -* ]]; do
    case "$1" in
        (--create|--delete|--get|--store)
            cmd=${1:2}
            ;;
        (--print|--list)
            cmd=${1:2}
            needName=0
            ;;
        (--help)
            usage
            exit 0
            ;;
        (--)
            break
            ;;
        (*)
            echo "Illegal option: $1"
            exit 2
    esac
    shift
done

name="$1"
[[ -z "$name" && $needName = 1 ]] && echo "Missing name" && exit 1
file="$secretDir/$1.gpg"

_generate() {
    cat /dev/urandom | tr -dc 'A-z0-9!@#$%^&*()-=+' | head -c$length
}

create() {
    _generate | store
}

delete() {
    rm -f "$file"
}

get() {
    if [[ -f "$file" ]]; then
        gpg --quiet --batch < "$file"
    else
        echo "No such secret"
        exit 6
    fi
}

store() {
    if [[ -f "$file" ]]; then
        echo "Secret exist"
        exit 7
    else
        gpg --quiet --batch -ea > "$file"
    fi    
}

print() {
    _generate
}

list() {
    ls -1 "$secretDir" | sed 's/\..*//'
}

$cmd 
