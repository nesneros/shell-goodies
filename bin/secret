#! /usr/bin/env bash
set -e

BN=$(basename "$0")
secretDir="$GOODIES_SECRETS_DIR"

if [[ -z "$secretDir" ]]; then
    echo "env GOODIES_SECRETS_DIR is not defined"
    exit 1
fi
length=15

usage() {
    cat <<EOF
Manage secrets stored encrypted in files.

Usage: ${BN} cmd [options] [args] 

Commands:
EOF
    sed -n "s/\(^.*\)().*#CMD\\s/\t\1:\t/p;" < "$0"
}

cmd="$1"
[[ -z "$cmd" ]] && echo "Missing command" && exit 1
shift
needNameArg=1
case "$cmd" in
    (create|store)
        optionString=f
        ;;
    (delete|get)
        ;;
    (print|list)
        needNameArg=0
        ;;
    (help)
        usage
        exit 0
        ;;
    (*)
        echo "Illegal command: $1"
        exit 2
esac
# while [[ "$1" = -* ]]; do
#     shift
# done

if [[ -n "$optionString" ]]; then
    t=$(getopt -u -o "$optionString" -n ${BN} -- "$@")
    set -- $t
    while true; do
        case "$1" in
            (-f)
                force=1
                ;;
            (--)
                shift
                break
                ;;
            (*)
                echo "Internal error"
                exit 5
        esac
        shift
    done
fi
name="$1"
[[ -z "$name" && $needNameArg = 1 ]] && echo "Missing name" && exit 1
file="$secretDir/$1.gpg"

_generate() {
    cat /dev/urandom | tr -dc 'A-z0-9!@#$%^&*()-=+' | head -c$length
}

create() { #CMD Create a new secret
    _generate | store
}

delete() { #CMD Delete a secret
    rm -f "$file"
}

get() { #CMD Get a secret
    if [[ -f "$file" ]]; then
        gpg --quiet --batch < "$file"
    else
        echo "No such secret"
        exit 6
    fi
}

store() { #CMD Read stdin and store it as a secret
    if [[ -f "$file" && "$force" -ne 1 ]]; then
        echo "Secret exist"
        exit 7
    else
        gpg --quiet --batch -ea > "$file"
    fi    
}

print() { #CMD Generate a 'secret' and print it. It is not stored
    _generate
}

list() { #CMD List all secrets
    ls -1 "$secretDir" | sed 's/\..*//'
}

$cmd 
